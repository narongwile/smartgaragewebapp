# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - mirror
  - build
  - test
  - release
  - deploy

mirror-github:
  stage: mirror
  script:
    - git clone --bare https://gitlab.com/narongwile/smartgaragewebapp.git
    - cd smartgaragewebapp.git
    - git config --global user.email "$GITHUB_EMAIL"
    - git reset --soft HEAD~1
    - git push --mirror https://$GITHUB_ACCESS_TOKEN@github.com/$MIRROR_USERNAME/smartgaragewebapp.git
    - cd ..
    - rm -rf smartgaragewebapp.git

deploy-test:
  stage: deploy
  image: alpine:latest
  before_script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
  script:
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "hostname"
    #- $REMOTE_SERVER "cd /home/nrkwine/smartgaragewebapp && docker-compose up -d"